/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        bm: bottom_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "BOTTOM_ROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------------------------
// |  CTRL |   1    |   2   |    3    |  4  |   5  |                              |  6  |  7  |    8    |   9   |   0    |   `   |
// |  TAB  |   Q    |   W   |    F    |  P  |   B  |                              |  J  |  L  |    U    |   Y   |   ;    | CTRL  |
// |  ESC  |   A    |   R   |    S    |  T  |   G  |                              |  M  |  N  |    E    |   I   |   O    |   '   |
// | SHIFT | Z/Ctrl | X/ALT | C/SHIFT |  D  |   V  |    GAMING   |  |     "]"     |  K  |  H  | ,/Shift | ./Alt | //Ctrl | SHIFT |
//                          |    ALT  | GUI | BSPC | ENTER/LOWER |  | SPACE/RAISE | TAB | GUI |   ALT   |
			bindings = <
&kp LCTRL &kp N1      &kp N2     &kp N3      &kp N4   &kp N5    &kp LC(UP) &kp K_PP    &kp N6  &kp N7   &kp N8          &kp N9       &kp N0         &kp GRAVE
&kp TAB   &kp Q       &kp W      &kp F       &kp P    &kp B                            &kp J   &kp L    &kp U           &kp Y        &kp SEMI       &kp LCTRL
&kp ESC   &kp A       &kp R      &kp S       &kp T    &kp G                            &kp M   &kp N    &kp E           &kp I        &kp O          &kp SQT
&kp LSHFT &bm LCTRL Z &bm LALT X &bm LSHFT C &kp D    &kp V     &tog 3     &kp RBKT    &kp K   &kp H    &bm RSHFT COMMA &bm LALT DOT &bm RCTRL FSLH &kp RSHFT
                                 &kp LALT    &kp LGUI &kp BSPC  &lt 1 RET  &lt 2 SPACE &kp TAB &kp RGUI &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp LC(LEFT) LC(RIGHT) &inc_dec_kp PG_UP PG_DN>;
		};

		lower_layer {
// ---------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |           |   |   |   |   |   |   |
// |       |     | "|" |  \  |  {  |  }  |           |   | _ | - | + |   |   |
// |   `   |  !  |  @  |  #  |  $  |  %  |           | ^ | & | * | ( | ) | ~ |
// |       |     |     |  =  |  [  |  ]  |   |   |   |   | : | < | > | ? |   |
//                     |     |     |     |   |   |   |   |   |   |
			bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans    &trans         &trans          &trans      &trans    &trans
&trans     &trans       &kp PIPE     &kp BSLH     &kp LBRC     &kp RBRC                   &trans    &kp UNDERSCORE &kp MINUS       &kp KP_PLUS &trans    &trans
&kp GRAVE  &kp EXCL     &kp AT       &kp HASH     &kp DOLLAR   &kp PRCNT                  &kp CARET &kp AMPS       &kp KP_MULTIPLY &kp LPAR    &kp RPAR  &kp TILDE
&trans     &trans       &trans       &kp EQUAL    &kp LBKT     &kp RBKT     &trans &trans &trans    &kp COLON      &kp LT          &kp GT      &kp QMARK &trans
                                     &trans       &trans       &trans       &trans &trans &trans    &trans         &trans
			>;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		raise_layer {
// ---------------------------------------------------------------------------
// | F1 | F2 | F3 | F4 | F5 | F6 |          | F7 | F8 | F9 | F10 | F11 | F12 |
// |    |    |    |    |    |    |          | v  | -> |    |     |     |     |
// |  ` | 1  | 2  | 3  | 4  | 5  |          | 6  | 7  |  8 |  9  |  0  |     |
// |    |    |    |    |    |    |   |  |   | ^  | <- |  , |  .  |  /  |     |
//                |    |    |    |   |  |   |    |    |    |
			bindings = <
&kp F1    &kp F2           &kp F3            &kp F4            &kp F5 &kp F6 &trans &trans &kp F7   &kp F8    &kp F9    &kp F10 &kp F11  &kp F12
&trans    &trans           &trans            &trans            &trans &trans               &kp DOWN &kp RIGHT &trans    &trans  &trans   &trans
&kp GRAVE &kp N1           &kp N2            &kp N3            &kp N4 &kp N5               &kp N6   &kp N7    &kp N8    &kp N9  &kp N0   &trans
&trans    &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans &trans &trans &trans &kp UP   &kp LEFT  &kp COMMA &kp DOT &kp FSLH &trans   
                                             &trans            &trans &trans &trans &trans &trans   &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

        gaming_layer {
// ---------------------------------------------------------------------------------------------
// |  CTRL | 1 | 2 |  3  |  4  |   5   |                  |   6   |  7   |  8  | 9 | 0 |   `   |
// |  TAB  | Q | W |  E  |  R  |   T   |                  |   Y   |  U   |  I  | O | P | CTRL  |
// |  ESC  | A | S |  D  |  F  |   G   |                  |   H   |  J   |  K  | L | ; |   '   |
// | SHIFT | Z | X |  C  |  V  |   B   |  "["  |  |  "]"  |   N   |  M   |  ,  | . | / | SHIFT |
//                 | GUI | ALT | LOWER | SPACE |  | ENTER | RAISE | BSPC | GUI |
			bindings = <
&kp LCTRL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &trans    &trans  &kp N6 &kp N7 &kp N8    &kp N9  &kp N0   &kp GRAVE
&kp TAB   &kp Q  &kp W  &kp E  &kp R  &kp T                    &kp Y  &kp U  &kp I     &kp O   &kp P    &kp LCTRL
&kp ESC   &kp A  &kp S  &kp D  &kp F  &kp G                    &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X  &kp C  &kp V  &kp B  &trans    &trans  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                        &trans &trans &trans &kp SPACE &kp RET &trans &trans &trans
			>;

			sensor-bindings = <&inc_dec_kp LC(LEFT) LC(RIGHT) &inc_dec_kp PG_UP PG_DN>;
		};
	};
};
